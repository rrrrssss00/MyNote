hashcash 机制大致描述如下（http://www.hashcash.org）：
如果希望判定一个人提供的的信息是本着正常使用，具备一定价值的。那么我们倾向认为提
供这个信息的人，愿意为此付出一定工作量来证明他的诚实。假如有一种机制，能够容易的
证明提供信息的人为此付出了一定工作量，那么此信息是可以接受，并被认为合理的。

比如，我收邮件的时候，做了一个规定：“把邮件内容数据，加入一个随机数，求一个
sha256散列数值。这个散列值一共256bit 。前20bit 必须都为0”.
这样，要给我发信的人，就必须反复尝试一个随机数，以保证邮件内容数据加上这个随机数
，能够产生sha256 的结果------前20bit 都是0.
如何产生出指定要求的整数？完全靠运气和CPU 运算时间。这就是一个工作量。工作本身毫
无意义。但是如果谁愿意付出这个工作量，就意味着他给我的邮件多半是有意义的。这就叫
“工作量证明”。也就是意味着这个人很有可能是诚实的。

这个机制被广泛用于防止垃圾邮件等。因为群发垃圾邮件的人，不可能有那么多时间去给每
个人算一个毫无意义的数字，浪费时间，降低发垃圾邮件的效率。

给购票验证设计同样的hashcash机制。

对于每个购票或者验证请求，服务器返回给它一个随机数A，要求客户端通过自己的辛苦计
算，找到一个随机数B，使得A字符串加上B的字符串，求一个sha256散列数值，这个三劣质
一共256bit。前n位（比方说20位）必须为0.
客户端只要能返回这个B，那么服务器验证一下A+B是否满足这个条件，如果满足的话，就认
为客户端付出了辛苦劳动，是诚实的用户，可以接纳这个请求。

A值和n值都是保存在服务器的session中。

合理调整n值，可以改变难度，改变客户端寻找随机数B的计算量。

n值可以由服务器动态调整，使得一台计算机调用所有计算能力后，一个合理时间内（比方
说5秒）才能完成计算。比方说，一个ip刷票的频率太快，可以给它增大n值。

这样一台计算机刷票时间就大大的下降了，不可能进行大规模刷票，除非它买高档服务器买
小机或者开发显卡计算程序，但即便这样它能提高的计算能力也是有限的，甚至在硬件和软
件开发上投入的成本远大于黄牛收入，这样就不会有黄牛刷票的可能了。

这个客户端计算的过程，可以做成IE插件，现在firefox和其他几种浏览器也是支持插件的
，能保证一般的计算机可以正常网络购票就可以了。手机购票同样可以在android或者ios的
客户端上加上这种计算验证的功能。

